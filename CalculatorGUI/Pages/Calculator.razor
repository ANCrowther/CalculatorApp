@page "/calculator"
@using ShuntingYardLibrary;

<h1>Calculator</h1>

<h2>
    <p> Input: @input</p>
    <p>Answer: @output</p>
</h2>

<p>
    <button class="btn btn-dark" style="font-size: 20px; width: 80px; margin-right: 3px" @onclick="ClickClear"> C </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 80px; margin-right: 3px" @onclick="ClickBackSpace"> BS </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 80px" @onclick="ClickSaveAnswer"> ANS </button>
</p>
<p>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickExponent"> x^y </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickOpenParenthesis"> ( </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickClosedParenthesis"> ) </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickDivision"> / </button>
</p>
<p>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickSeven"> 7 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickEight"> 8 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickNine"> 9 </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickMultiplication"> * </button>

</p>
<p>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickFour"> 4 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickFive"> 5 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickSix"> 6 </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickSubtraction"> - </button>
</p>
<p>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickOne"> 1 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickTwo"> 2 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickThree"> 3 </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickAddition"> + </button>

</p>
<p>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickPlusOrMinus"> +/- </button>
    <button name="0" class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickZero"> 0 </button>
    <button class="btn btn-primary" style="font-size: 20px; width: 60px" @onclick="ClickDecimal"> . </button>
    <button class="btn btn-dark" style="font-size: 20px; width: 60px" @onclick="ClickEquals"> = </button>

</p>

@code {
    string input = String.Empty;
    List<char> list = new List<char>();
    string output = String.Empty;

    private void ClickOne() {
        UpdateString('1');
    }

    private void ClickTwo() {
        UpdateString('2');
    }

    private void ClickThree() {
        UpdateString('3');
    }

    private void ClickFour() {
        UpdateString('4');
    }

    private void ClickFive() {
        UpdateString('5');
    }

    private void ClickSix() {
        UpdateString('6');
    }

    private void ClickSeven() {
        UpdateString('7');
    }

    private void ClickEight() {
        UpdateString('8');
    }

    private void ClickNine() {
        UpdateString('9');
    }

    private void ClickZero() {
        UpdateString('0');
    }

    private void ClickDecimal() {
        //TODO: make this work for the list.
        if (!int.TryParse(input[input.Length-1].ToString(), out _)) {
            UpdateString('0');
        }
        UpdateString('.');
    }

    private void ClickAddition() {
        UpdateString('+');
    }

    private void ClickSubtraction() {
        UpdateString('-');
    }

    private void ClickMultiplication() {
        UpdateString('*');
    }

    private void ClickDivision() {
        UpdateString('/');
    }

    private void ClickExponent() {
        UpdateString('^');
    }

    private void ClickOpenParenthesis() {
        UpdateString('(');
    }

    private void ClickClosedParenthesis() {
        UpdateString(')');
    }

    private void ClickPlusOrMinus() {
        //TODO: check to see if the number is already negative. Currently just adds a new '-' sign.
        for (int i = list.Count - 1; i >= 0; i--) {
            if (i == 0) {
                list.Insert(i, '-');
                break;
            }
            if (!char.IsNumber(list[i])) {
                list.Insert(i + 1, '-');
                break;
            }
        }
        //UpdateString();
    }

    private void ClickClear() {
        input = String.Empty;
        output = String.Empty;
        list.Clear();
    }

    private void ClickBackSpace() {
        if (input != String.Empty) {
            input = input.Remove(input.Length - 1);
        }
    }

    private void ClickEquals() {
        output = ExpressionTree.Evaluate(input).ToString();
        input = String.Empty;
        list.Clear();
    }

    private void ClickSaveAnswer() {
        input = output;
        list.Clear();
        foreach (char c in output) {
            list.Add(c);
        }
        output = String.Empty;
    }

    private void UpdateString(char symbol) {
        input = String.Empty;
        list.Add(symbol);
        foreach (char c in list) {
            input += c;
        }
    }
}
